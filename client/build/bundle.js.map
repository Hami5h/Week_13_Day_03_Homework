{"version":3,"sources":["webpack:///webpack/bootstrap b924f97c58532318a175","webpack:///./src/app.js","webpack:///./src/services/request.js","webpack:///./src/views/countryView.js","webpack:///./src/models/mapWrapper.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtFA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,gCAAgC,WAAW,IAAI,WAAW;AAC1D,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b924f97c58532318a175","let countries = [];\nconst Request = require('./services/request.js');\nconst CountryView = require('./views/countryView');\nconst MapWrapper = require('./models/mapWrapper.js');\n\nconst request = new Request(\"http://localhost:3000/api/countries\")\nconst countryView = new CountryView();\n\n\nvar app = function(){\nconst url = \"https://restcountries.eu/rest/v2/all\";\nmakeRequest(url, requestComplete);\n\nconst saveCountryButton = document.querySelector('#save-country');\nsaveCountryButton.addEventListener('click', saveCountryButtonClicked)\n\n\nconst removeCountryButton = document.querySelector('#remove-country');\nremoveCountryButton.addEventListener('click', removeCountryButtonClicked)\n\n}\n\nconst makeRequest = function(url, callback) {\n  const request = new XMLHttpRequest();\n  request.open('GET', url);\n  request.send();\n  request.addEventListener('load', callback);\n};\n\nconst requestComplete = function() {\n  if (this.status !== 200) return;\n  const jsonString = this.responseText;\n  countries = JSON.parse(jsonString);\n  const select = document.querySelector('#all-countries-list');\n  select.addEventListener('change', function(){\n    let selectedCountry = countries[this.value];\n  })\n  populateDropDown(countries);\n}\n\nconst populateDropDown = function(country) {\n  const dropDown = document.querySelector('#all-countries-list');\n  country.forEach(function(country, index) {\n    const option = document.createElement('option');\n    option.value = index;\n    option.innerText = country.name;\n    dropDown.appendChild(option);\n  });\n}\n\nconst saveCountryButtonClicked = function(evt) {\n  const countryIndex = document.querySelector('#all-countries-list').value;\n  const selectedCountry = countries[countryIndex];\n  const latlng = {lat: selectedCountry.latlng[0], lng: selectedCountry.latlng[1]};\n  const center = latlng\n    const container = document.querySelector('#main-map');\n    const mainMap = new MapWrapper(container, center, 5);\n    mainMap.addClickEvent();\n    mainMap.addMarker(center, \"This is\" + \" \" + selectedCountry.name);\n\n  request.post(saveCountryRequestComplete, selectedCountry);\n}\n\nconst saveCountryRequestComplete = function(name) {\n  countryView.addCountry(name);\n}\n\nconst removeCountryButtonClicked = function(evt) {\n  console.log('remove button clicked');\n  request.delete(deleteRequestComplete);\n}\n\nconst deleteRequestComplete = function(){\n  countryView.clear();\n}\n\n\ndocument.addEventListener('DOMContentLoaded', app);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 0\n// module chunks = 0","const Request = function(url) {\n  this.url = url;\n}\n//making this pretty generic, si it can be re-usable\nRequest.prototype.get = function(callback) {\n  const request = new XMLHttpRequest();\n  request.open('GET', this.url);\n  request.addEventListener('load', function(){\n    if(this.status != 200) {\n      return;\n    }\n    const responseBody = JSON.parse(this.responseText);\n//responseBody will be allQuotes, this is dynamic - the callback can we\n//whatever you want it to be, single responsibilty obeyed\n    callback(responseBody);\n  });\n  //need to send it in here - at the very end of the function\n  request.send();\n}\n\nRequest.prototype.post = function(callback, body) {\n  const request = new XMLHttpRequest();\n  request.open('POST', this.url);\n  //sometimes we need to tell the server what we're giving it in a header, where\n  //the additional info lives/ insomnia did it all for us\n  //now we need to add a header in js\n  request.setRequestHeader('Content-Type', 'application/json');\n  request.addEventListener('load', function(){\n    if(this.status != 201) {\n      return;\n    }\n    const responseBody = JSON.parse(this.responseText);\n    callback(responseBody);\n  });\n  //we need to pass the body but stringified, so another funciton doesn't\n  //need to worry about it, it's ready to go\n  request.send(JSON.stringify(body));\n}\n\nRequest.prototype.delete = function(callback) {\n  const request = new XMLHttpRequest();\n  request.open('DELETE', this.url);\n  request.addEventListener('load', function() {\n    if(this.status!==204) {\n      return;\n    }\n    callback();\n  });\n  request.send();\n}\n\nmodule.exports = Request;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/services/request.js\n// module id = 1\n// module chunks = 0","var CountryView = function(){\n  this.countries = [];\n}\n//everytime you add a country it adds it to the array and displays it\nCountryView.prototype.addCountry = function(country) {\n  this.countries.push(country);\n  this.render(country);\n}\n\nCountryView.prototype.clear = function(country) {\n  this.countries = [];\n  const ul = document.querySelector('#countries');\n  ul.innerHTML = '';\n}\n//all the appending in this one\n// CountryView.prototype.render = function(country){\n//     const ul = document.querySelector('#countries');\n//     while(ul.firstChild) {\n//       ul.removeChild(ul.firstChild);\n//     }\n//     const liName = document.createElement('li');\n//     const licapital = document.createElement('li');\n//     const imageLi = document.createElement('li');\n//     const liFlag = document.createElement('img')\n//     liName.innerText = country.name;\n//     licapital.innerText = country.capital;\n//     liFlag.src = country.flag;\n//     imageLi.appendChild(liFlag);\n//     ul.appendChild(liName);\n//     ul.appendChild(licapital);\n//     ul.appendChild(imageLi);\n// }\n\nCountryView.prototype.render = function(country){\n  const countryInfo = document.getElementById('countries');\n  while(countryInfo.firstChild) {\n    countryInfo.removeChild(countryInfo.firstChild);\n  }\n  const name = createName(country);\n  const capital = createCapital(country);\n  const region = createRegion(country);\n  const subRegion = createSubRegion(country);\n  const flag = createFlag(country);\n  appendElements(countryInfo, name, capital, region, subRegion, flag);\n}\n\nconst createName = function(country) {\n  const name = document.createElement('li');\n  name.innerText = 'Name: ' + country.name;\n  return name;\n}\n\nconst createCapital = function(country) {\n  const capital = document.createElement('li');\n  capital.innerText = 'Capital: ' + country.capital;\n  return capital;\n}\n\nconst createRegion = function(country) {\n  const region = document.createElement('li');\n  region.innerText = 'Region: ' + country.region;\n  return region;\n}\n\nconst createSubRegion = function(country) {\n  const subRegion = document.createElement('li');\n  subRegion.innerText = 'Sub Region: ' + country.subregion;\n  return subRegion;\n}\n\nconst createFlag = function(country) {\n  const flag = document.createElement('p')\n  const image = document.createElement('img')\n  image.src = country.flag;\n  flag.appendChild(image);\n  return flag;\n}\n\nconst appendElements = function(countryInfo, name, capital, region, subregion, flag) {\n  countryInfo.appendChild(name);\n  countryInfo.appendChild(capital);\n  countryInfo.appendChild(region);\n  countryInfo.appendChild(subregion);\n  countryInfo.appendChild(flag);\n}\n\n module.exports = CountryView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/countryView.js\n// module id = 2\n// module chunks = 0","const MapWrapper = function(container, coords, zoom) {\n\n  this.googleMap = new google.maps.Map(container, {\n    center: coords,\n    zoom: zoom\n  });\n\n  this.markers = [];\n}\n\nMapWrapper.prototype.addClickEvent = function() {\n  google.maps.event.addListener(this.googleMap, 'click', function(event) {\n    const position = {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    };\n    this.addMarker(position, \"You selected this location\");\n  }.bind(this));\n}\n\nMapWrapper.prototype.addMarker = function(coords, message) {\n  const infoWindowLocation = new google.maps.InfoWindow({\n    content: message + ' ' + `${coords.lat}, ${coords.lng}`\n  });\n  const marker = new google.maps.Marker({\n    position: coords,\n    map: this.googleMap,\n    infoWindow: infoWindowLocation\n  });\n  google.maps.event.addListener(marker, 'click', function() {\n    this.infoWindow.open(this.googleMap, this);\n  });\n  this.markers.push(marker);\n}\n\nMapWrapper.prototype.removeMarkers = function() {\n  this.markers.forEach(function(marker){\n    marker.setMap(null);\n  })\n  this.markers = [];\n}\n\n// MapWrapper.prototype.toSelectedCountry = function() {\n//   const country = {\n//     lat: 41.854073,\n//     lng: -87.619392,\n//   }\n//   this.googleMap.setCenter(country);\n//   this.addMarker(country, \"This is Chicago\");\n//   this.googleMap.setZoom(16);\n// }\n\nMapWrapper.prototype.whereAmI = function() {\n  navigator.geolocation.getCurrentPosition(function(position) {\n    const location = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    }\n    this.googleMap.setCenter(location);\n    this.addMarker(location, 'This is your current location');\n  }.bind(this))\n}\n\nmodule.exports = MapWrapper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/models/mapWrapper.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}